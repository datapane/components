[tool.poetry]
name = "datapane-components"
version = "2023.3.20"
description = "Reusable Datapane components and sample reports and apps"
authors = ["Datapane Team <dev@datapane.com>"]
license = "Apache 2.0"

readme = "README.md"
homepage = "https://www.datapane.com"
repository = "https://github.com/datapane/datapane"
documentation = "https://docs.datapane.com"


keywords = ["data", "analysis", "jupyter", "pandas", "altair"]
classifiers = [
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: Apache Software License",
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Environment :: Console",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]

packages = [
    {include = "datapane_components", from = "src"}
]

# extra files (allows overriding gitignore)
include = [
    "NOTICE",
    "README.md",
    "LICENSE",
]

[tool.poetry.dependencies]
python = ">= 3.8.0, < 3.12.0"
datapane = "^0.16.1"
altair = "^4.0.0"
vega-datasets = ">=0.9.0,<1.0.0"

pooch = "^1.6.0"
duckdb = "^0.7.1"
openai = "^0.27.0"
# matplotlib = { version = "^3.2.0", optional = true }
# seaborn = "^0.12.2"


[tool.poetry.group.dev.dependencies]
jupyterlab = "^3.6.1"
pytest = "^7.0.0"
pytest-datadir = "^1.3.1"
# datapane = { path = "../datapane/python-client", develop = true }
poethepoet = "^0.18.1"

# workaround poetry trying to make a unified lockfile
# https://github.com/amoffat/sh/issues/659
sh = [
    {version = "^1.14.3", python = "<3.8.1"},
    {version = "^2.0.2", python = ">=3.8.1"}
]
black = "^23.1.0"
ruff = "^0.0.256"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py38']
# include = '\.pyi?$'

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
#select = ["E", "F"]
ignore = ["E501"]


# Allow autofix for all enabled rules (when `--fix`) is provided.
#fixable = ["A", "B", "C", "D", "E", "F", "..."]
#unfixable = []

line-length = 120
target-version = "py38"

[tool.poe.tasks]
bump-version = { "script" = "ci.bump_version:main" }
git-bump-version = { "script" = "ci.bump_version:main(git=True)" }
ruff-check = "ruff check . --diff"
black-check = "black . --check --diff"
ruff-fix = "ruff check . --fix --show-fixes"
black-fix = "black ."
lint = { sequence = ["ruff-check", "black-check"] }
fixlint = { sequence = ["ruff-fix", "black-fix"] }
